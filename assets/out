#!/bin/bash

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source $(dirname $0)/common.sh

source=$1

if [ -z "$source" ]; then
  echo "usage: $0 <path/to/source>"
  exit 1
fi

cd $source

payload=$(mktemp $TMPDIR/artifactory-resource-request.XXXXXX)

cat > $payload <&0

endpoint=$(jq -r '.source.endpoint // ""' < $payload)
regex=$(jq -r '.source.regex // ""' < $payload)
username=$(jq -r '.source.username // ""' < $payload)
password=$(jq -r '.source.password // ""' < $payload)
skip_ssl_verification=$(jq -r '.source.skip_ssl_verification // ""' < $payload)

repository=$(jq -r '.source.repository // ""' < $payload)
folder=$(jq -r '.params.folder // ""' < $payload)
file=$(jq -r '.params.file // ""' < $payload)
paramRegex=$(jq -r '.params.regex // ""' < $payload)
properties=$(jq -r '.params.properties // ""' < $payload)
sha256checksum=$(jq -r '.params.sha256checksum // ""' < $payload)
forcesha256checksum=$(jq -r '.params.forcesha256checksum // ""' < $payload)

if [ -z "$endpoint" ]; then
  echo "invalid payload (missing endpoint)"
  exit 1
fi

if [ -z "$repository" ]; then
  echo "invalid payload (missing repository)"
  exit 1
fi

if [ -z "$file" ]; then
  echo "invalid payload (missing file)"
  exit 1
fi

abs_file=$(ls $file)
filename=$(basename "$abs_file")


args_url="$endpoint"
args_url="$args_url$repository"

if [ -n "$folder" ]; then
	echo "adding parameter folder"
	args_url="$args_url/$folder"
fi

args_url="$args_url/$filename"

if [ -n "$properties" ]; then
	echo "adding properties $properties"
	args_url="$args_url;$properties"
fi

args_security=

[ -n "$username" ] && args_security="-u $username";
[ -n "$password" ] && args_security="$args_security:$password";
trueValue="true"
[ -n "$skip_ssl_verification" ] && [ "${skip_ssl_verification,,}" = "${trueValue,,}" ] && args_security="$args_security -k";

if [ "$sha256checksum" == "true" ]; then
	echo "computing checksum"
	sha256_checksum=$(sha256sum $abs_file | awk '{print $1}')
	args_security="$args_security -H \"X-Checksum-Sha256:${sha256_checksum}\"";
fi

# echo "########## $filename, $file"

# echo $args_security "-T $abs_file $args_url "
result=$(curl $args_security "-T$abs_file" "$args_url")

if [ "$forcesha256checksum" == "true" ]; then
	repo=$(echo $result | jq -r .repo)
	path=$(echo $result | jq -r .path)
	echo "calling /api/checksum/sha25 on repo=$repo, path=$path"

	curl $args_security -H 'Content-Type: application/json' --data "{ \"repoKey\" : \"$repo\", \"path\" : \"$path\" }" "$endpoint/api/checksum/sha256"
fi

# echo $file $regex
version=$(applyRegex_version $regex $filename)

jq -n "{
  version: {version: $(echo $version | jq -R .)}
}" >&3
